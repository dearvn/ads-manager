{"remainingRequest":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/thread-loader/dist/cjs.js!/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/nguyenthanhdoan/www/wp/wpplugins/packages/utils/lib/factory/ajax/corruptRestApi.tsx","dependencies":[{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/packages/utils/lib/factory/ajax/corruptRestApi.tsx","mtime":1657739433190},{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/cache-loader/dist/cjs.js","mtime":1657732874511},{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/thread-loader/dist/cjs.js","mtime":1657732875400},{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/babel-loader/lib/index.js","mtime":1657732874459}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yIjsKdmFyIFdBSVRfVE9fVEVTVCA9IDEwMDAwOwp2YXIgTk9USUNFX0lEID0gIm5vdGljZS1jb3JydXB0LXJlc3QtYXBpIjsKLyoqCiAqIFJlZ2lzdGVyIGEgbmV3IGVuZHBvaW50IHdoaWNoIG5lZWRzIHRvIHJlc29sdmUgdG8gYSB2YWxpZCBKU09OIHJlc3VsdC4gSW4gdGhpcyB3YXkgd2UKICogY2FuIGRldGVjdCBhIGNvcnJ1cHQgUkVTVCBBUEkgbmFtZXNwYWNlIGUuIGcuIGl0IGlzIGJsb2NrZWQgdGhyb3VnaCBhIHNlY3VyaXR5IHBsdWdpbi4KICovCgpmdW5jdGlvbiBoYW5kbGVDb3JydXBSZXN0QXBpKHJlc29sdmUpIHsKICB2YXIgZm9yY2VSZXJlcXVlc3QgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogIC8vIEluaXRpYWxseSBzZXQKICB3aW5kb3cuZGV0ZWN0Q29ycnVwUmVzdEFwaUZhaWxlZCA9IHdpbmRvdy5kZXRlY3RDb3JydXBSZXN0QXBpRmFpbGVkIHx8IDA7CiAgc2V0VGltZW91dCggLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICB2YXIgbm90aWNlLCBfaSwgX09iamVjdCRrZXlzLCBuYW1lc3BhY2UsIGxpOwoKICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIG5vdGljZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKE5PVElDRV9JRCk7IC8vIE9ubHkgaW4gYmFja2VuZCBhbmQgd2hlbiBhIGNvcnJ1cHQgUkVTVCBBUEkgZGV0ZWN0ZWQKCiAgICAgICAgICAgIGlmICghKG5vdGljZSAmJiAod2luZG93LmRldGVjdENvcnJ1cFJlc3RBcGlGYWlsZWQgPiAwIHx8IGZvcmNlUmVyZXF1ZXN0KSkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9pID0gMCwgX09iamVjdCRrZXlzID0gT2JqZWN0LmtleXMocmVzb2x2ZSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBpZiAoIShfaSA8IF9PYmplY3Qka2V5cy5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBuYW1lc3BhY2UgPSBfT2JqZWN0JGtleXNbX2ldOwogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgIHJldHVybiByZXNvbHZlW25hbWVzcGFjZV0oKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNjsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDUpOwogICAgICAgICAgICBub3RpY2Uuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgICAgICAgIGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibGkiKTsKICAgICAgICAgICAgbGkuaW5uZXJIVE1MID0gIi0gPGNvZGU+Ii5jb25jYXQobmFtZXNwYWNlLCAiPC9jb2RlPiIpOwogICAgICAgICAgICBub3RpY2UuY2hpbGROb2Rlc1sxXS5hcHBlbmRDaGlsZChsaSk7CgogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgX2krKzsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s1LCAxMF1dKTsKICB9KSksIFdBSVRfVE9fVEVTVCk7Cn0KCmV4cG9ydCB7IGhhbmRsZUNvcnJ1cFJlc3RBcGkgfTs="},{"version":3,"sources":["/Users/nguyenthanhdoan/www/wp/wpplugins/packages/utils/lib/factory/ajax/corruptRestApi.tsx"],"names":["WAIT_TO_TEST","NOTICE_ID","handleCorrupRestApi","resolve","forceRerequest","window","detectCorrupRestApiFailed","setTimeout","notice","document","getElementById","Object","keys","namespace","style","display","li","createElement","innerHTML","childNodes","appendChild"],"mappings":";;AAUA,IAAMA,YAAY,GAAG,KAArB;AAEA,IAAMC,SAAS,GAAG,yBAAlB;AAEA;;;;;AAIA,SAASC,mBAAT,CAA6BC,OAA7B,EAAmG;AAAA,MAAxBC,cAAwB,uEAAP,KAAO;AAC/F;AACAC,EAAAA,MAAM,CAACC,yBAAP,GAAmCD,MAAM,CAACC,yBAAP,IAAoC,CAAvE;AAEAC,EAAAA,UAAU,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACDC,YAAAA,MADC,GACQC,QAAQ,CAACC,cAAT,CAAwBT,SAAxB,CADR,EAGP;;AAHO,kBAIHO,MAAM,KAAKH,MAAM,CAACC,yBAAP,GAAmC,CAAnC,IAAwCF,cAA7C,CAJH;AAAA;AAAA;AAAA;;AAAA,mCAKqBO,MAAM,CAACC,IAAP,CAAYT,OAAZ,CALrB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKQU,YAAAA,SALR;AAAA;AAAA;AAAA,mBAOWV,OAAO,CAACU,SAAD,CAAP,EAPX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASKL,YAAAA,MAAM,CAACM,KAAP,CAAaC,OAAb,GAAuB,OAAvB;AACMC,YAAAA,EAVX,GAUgBP,QAAQ,CAACQ,aAAT,CAAuB,IAAvB,CAVhB;AAWKD,YAAAA,EAAE,CAACE,SAAH,qBAA0BL,SAA1B;AACAL,YAAAA,MAAM,CAACW,UAAP,CAAkB,CAAlB,EAAqBC,WAArB,CAAiCJ,EAAjC;;AAZL;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAgBPhB,YAhBO,CAAV;AAiBH;;AAED,SAASE,mBAAT","sourcesContent":["declare global {\n    interface Window {\n        /**\n         * This number indicates the failed `GET` requests for all REST API calls.\n         * See also `commonRequest.tsx`.\n         */\n        detectCorrupRestApiFailed: number;\n    }\n}\n\nconst WAIT_TO_TEST = 10000;\n\nconst NOTICE_ID = \"notice-corrupt-rest-api\";\n\n/**\n * Register a new endpoint which needs to resolve to a valid JSON result. In this way we\n * can detect a corrupt REST API namespace e. g. it is blocked through a security plugin.\n */\nfunction handleCorrupRestApi(resolve: Record<string, () => Promise<void>>, forceRerequest = false) {\n    // Initially set\n    window.detectCorrupRestApiFailed = window.detectCorrupRestApiFailed || 0;\n\n    setTimeout(async () => {\n        const notice = document.getElementById(NOTICE_ID);\n\n        // Only in backend and when a corrupt REST API detected\n        if (notice && (window.detectCorrupRestApiFailed > 0 || forceRerequest)) {\n            for (const namespace of Object.keys(resolve)) {\n                try {\n                    await resolve[namespace]();\n                } catch (e) {\n                    notice.style.display = \"block\";\n                    const li = document.createElement(\"li\");\n                    li.innerHTML = `- <code>${namespace}</code>`;\n                    notice.childNodes[1].appendChild(li);\n                }\n            }\n        }\n    }, WAIT_TO_TEST);\n}\n\nexport { handleCorrupRestApi };\n"]}]}