{"remainingRequest":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/thread-loader/dist/cjs.js!/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/nguyenthanhdoan/www/wp/wpplugins/packages/utils/lib/options.tsx","dependencies":[{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/packages/utils/lib/options.tsx","mtime":1657739433194},{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/cache-loader/dist/cjs.js","mtime":1657732874511},{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/thread-loader/dist/cjs.js","mtime":1657732875400},{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/babel-loader/lib/index.js","mtime":1657732874459}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKCi8qKgogKiBTZWUgUEhQIGZpbGUgaW5jL0Fzc2V0cy5waHAuCiAqLwp2YXIgQmFzZU9wdGlvbnMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEJhc2VPcHRpb25zKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJhc2VPcHRpb25zKTsKCiAgICB0aGlzLnNsdWcgPSB2b2lkIDA7CiAgICB0aGlzLnRleHREb21haW4gPSB2b2lkIDA7CiAgICB0aGlzLnZlcnNpb24gPSB2b2lkIDA7CiAgICB0aGlzLnJlc3RVcmwgPSB2b2lkIDA7CiAgICB0aGlzLnJlc3ROYW1lc3BhY2UgPSB2b2lkIDA7CiAgICB0aGlzLnJlc3RSb290ID0gdm9pZCAwOwogICAgdGhpcy5yZXN0UXVlcnkgPSB2b2lkIDA7CiAgICB0aGlzLnJlc3ROb25jZSA9IHZvaWQgMDsKICAgIHRoaXMucHVibGljVXJsID0gdm9pZCAwOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEJhc2VPcHRpb25zLCBudWxsLCBbewogICAga2V5OiAic2x1Z0NhbWVsQ2FzZSIsCgogICAgLyoqCiAgICAgKiBDb252ZXJ0IGEgc2x1ZyBsaWtlICJteS1wbHVnaW4iIHRvICJteVBsdWdpbiIuIFRoaXMgY2FuCiAgICAgKiBiZSB1c2VmdWwgZm9yIGxpYnJhcnkgbmFtaW5nICh3aW5kb3dbIiJdIGlzIGJhZCBiZWNhdXNlIHRoZSBoeXBoZW5zKS4KICAgICAqCiAgICAgKiBAcGFyYW0gc2x1ZwogICAgICogQHJldHVybnMKICAgICAqLwogICAgdmFsdWU6IGZ1bmN0aW9uIHNsdWdDYW1lbENhc2Uoc2x1ZykgewogICAgICByZXR1cm4gc2x1Zy5yZXBsYWNlKC8tKFthLXpdKS9nLCBmdW5jdGlvbiAoZykgewogICAgICAgIHJldHVybiBnWzFdLnRvVXBwZXJDYXNlKCk7CiAgICAgIH0pOwogICAgfQogICAgLyoqCiAgICAgKiBHZXQgdGhlIHNsdWcgZnJvbSB0aGUgY3VycmVudCBwcm9jZXNzICh3ZWJwYWNrKSBpbnN0ZWFkIG9mIHRoZSBQSFAgcGx1Z2luIG91dHB1dC4KICAgICAqIEZvciBzb21lIGNhc2VzIHlvdSBuZWVkIHRvIHVzZSB0aGF0LgogICAgICoKICAgICAqIEBwYXJhbSBlbnYKICAgICAqIEBwYXJhbSBjYW1lbENhc2UKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJnZXRQdXJlU2x1ZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UHVyZVNsdWcoZW52KSB7CiAgICAgIHZhciBjYW1lbENhc2UgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogICAgICByZXR1cm4gY2FtZWxDYXNlID8gQmFzZU9wdGlvbnMuc2x1Z0NhbWVsQ2FzZShlbnYuc2x1ZykgOiBlbnYuc2x1ZzsKICAgIH0KICB9XSk7CgogIHJldHVybiBCYXNlT3B0aW9uczsKfSgpOwoKZXhwb3J0IHsgQmFzZU9wdGlvbnMgfTs="},{"version":3,"sources":["/Users/nguyenthanhdoan/www/wp/wpplugins/packages/utils/lib/options.tsx"],"names":["BaseOptions","slug","textDomain","version","restUrl","restNamespace","restRoot","restQuery","restNonce","publicUrl","replace","g","toUpperCase","env","camelCase","slugCamelCase"],"mappings":";;;AAAA;;;IAGeA,W;;;;SACJC,I;SACAC,U;SACAC,O;SACAC,O;SACAC,a;SACAC,Q;SACAC,S;SACAC,S;SACAC,S;;;;;;AAEP;;;;;;;kCAO4BR,I,EAAc;AACtC,aAAOA,IAAI,CAACS,OAAL,CAAa,WAAb,EAA0B,UAACC,CAAD;AAAA,eAAOA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,EAAP;AAAA,OAA1B,CAAP;AACH;AAED;;;;;;;;;;gCAO0BC,G,EAA4C;AAAA,UAAnBC,SAAmB,uEAAP,KAAO;AAClE,aAAOA,SAAS,GAAGd,WAAW,CAACe,aAAZ,CAA0BF,GAAG,CAACZ,IAA9B,CAAH,GAAyCY,GAAG,CAACZ,IAA7D;AACH;;;;;;AAGL,SAASD,WAAT","sourcesContent":["/**\n * See PHP file inc/Assets.php.\n */\nabstract class BaseOptions {\n    public slug: string;\n    public textDomain: string;\n    public version: string;\n    public restUrl?: string;\n    public restNamespace?: string;\n    public restRoot?: string;\n    public restQuery?: {};\n    public restNonce?: string;\n    public publicUrl?: string;\n\n    /**\n     * Convert a slug like \"my-plugin\" to \"myPlugin\". This can\n     * be useful for library naming (window[\"\"] is bad because the hyphens).\n     *\n     * @param slug\n     * @returns\n     */\n    public static slugCamelCase(slug: string) {\n        return slug.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n    }\n\n    /**\n     * Get the slug from the current process (webpack) instead of the PHP plugin output.\n     * For some cases you need to use that.\n     *\n     * @param env\n     * @param camelCase\n     */\n    public static getPureSlug(env: typeof process.env, camelCase = false) {\n        return camelCase ? BaseOptions.slugCamelCase(env.slug) : env.slug;\n    }\n}\n\nexport { BaseOptions };\n"]}]}