{"remainingRequest":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/thread-loader/dist/cjs.js!/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/nguyenthanhdoan/www/wp/wpplugins/packages/utils/lib/factory/i18n.tsx","dependencies":[{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/packages/utils/lib/factory/i18n.tsx","mtime":1657739433193},{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/cache-loader/dist/cjs.js","mtime":1657732874511},{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/thread-loader/dist/cjs.js","mtime":1657732875400},{"path":"/Users/nguyenthanhdoan/www/wp/wpplugins/node_modules/babel-loader/lib/index.js","mtime":1657732874459}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIobywgYWxsb3dBcnJheUxpa2UpIHsgdmFyIGl0OyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gInVuZGVmaW5lZCIgfHwgb1tTeW1ib2wuaXRlcmF0b3JdID09IG51bGwpIHsgaWYgKEFycmF5LmlzQXJyYXkobykgfHwgKGl0ID0gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8pKSB8fCBhbGxvd0FycmF5TGlrZSAmJiBvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gIm51bWJlciIpIHsgaWYgKGl0KSBvID0gaXQ7IHZhciBpID0gMDsgdmFyIEYgPSBmdW5jdGlvbiBGKCkge307IHJldHVybiB7IHM6IEYsIG46IGZ1bmN0aW9uIG4oKSB7IGlmIChpID49IG8ubGVuZ3RoKSByZXR1cm4geyBkb25lOiB0cnVlIH07IHJldHVybiB7IGRvbmU6IGZhbHNlLCB2YWx1ZTogb1tpKytdIH07IH0sIGU6IGZ1bmN0aW9uIGUoX2UpIHsgdGhyb3cgX2U7IH0sIGY6IEYgfTsgfSB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0gdmFyIG5vcm1hbENvbXBsZXRpb24gPSB0cnVlLCBkaWRFcnIgPSBmYWxzZSwgZXJyOyByZXR1cm4geyBzOiBmdW5jdGlvbiBzKCkgeyBpdCA9IG9bU3ltYm9sLml0ZXJhdG9yXSgpOyB9LCBuOiBmdW5jdGlvbiBuKCkgeyB2YXIgc3RlcCA9IGl0Lm5leHQoKTsgbm9ybWFsQ29tcGxldGlvbiA9IHN0ZXAuZG9uZTsgcmV0dXJuIHN0ZXA7IH0sIGU6IGZ1bmN0aW9uIGUoX2UyKSB7IGRpZEVyciA9IHRydWU7IGVyciA9IF9lMjsgfSwgZjogZnVuY3Rpb24gZigpIHsgdHJ5IHsgaWYgKCFub3JtYWxDb21wbGV0aW9uICYmIGl0LnJldHVybiAhPSBudWxsKSBpdC5yZXR1cm4oKTsgfSBmaW5hbGx5IHsgaWYgKGRpZEVycikgdGhyb3cgZXJyOyB9IH0gfTsgfQoKZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSAic3RyaW5nIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09ICJPYmplY3QiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSAiTWFwIiB8fCBuID09PSAiU2V0IikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSAiQXJndW1lbnRzIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH0KCmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfQoKLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vQXV0b21hdHRpYy93cC1jYWx5cHNvL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2kxOG4tY2FseXBzby9zcmMvaW5kZXguanMKaW1wb3J0IGludGVycG9sYXRlIGZyb20gImludGVycG9sYXRlLWNvbXBvbmVudHMiOwppbXBvcnQgKiBhcyB3cGkxOG4gZnJvbSAiQHdvcmRwcmVzcy9pMThuIjsKaW1wb3J0IHdwIGZyb20gIndwIjsKLyoqCiAqIENyZWF0ZSBtdWx0aXBsZSBmdW5jdGlvbnMgZm9yIGEgc3BlY2lmaWMgcGx1Z2luIHNvIHRoZXkgY2FuIGJlIGxvY2FsaXplZC4KICoKICogQHBhcmFtIHNsdWcgVGhlIHNsdWcgd2hpY2ggeW91IGhhdmUgcmVnaXN0ZXJlZCB5b3VyIGkxOG4gYXNzZXRzCiAqIEByZXR1cm5zCiAqLwoKZnVuY3Rpb24gY3JlYXRlTG9jYWxpemF0aW9uRmFjdG9yeShzbHVnKSB7CiAgdmFyIF9yZWYgPSB3aW5kb3csCiAgICAgIHdwaTE4bkxhenkgPSBfcmVmLndwaTE4bkxhenk7CgogIGlmICh3cGkxOG5MYXp5ICYmIHdwaTE4bkxhenlbc2x1Z10gJiYgd3AgJiYgd3AuaTE4bikgewogICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHdwaTE4bkxhenlbc2x1Z10pLAogICAgICAgIF9zdGVwOwoKICAgIHRyeSB7CiAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgdmFyIGxvY2FsZURhdGEgPSBfc3RlcC52YWx1ZTsKICAgICAgICB3cC5pMThuLnNldExvY2FsZURhdGEobG9jYWxlRGF0YSwgc2x1Zyk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgIH0KICB9CiAgLyoqCiAgICogVHJhbnNsYXRlcyBhbmQgcmV0cmlldmVzIHRoZSBzaW5ndWxhciBvciBwbHVyYWwgZm9ybSBiYXNlZCBvbiB0aGUgc3VwcGxpZWQgbnVtYmVyLgogICAqIEZvciBhcmd1bWVudHMgc3ByaW50ZiBpcyB1c2VkLCBzZWUgaHR0cDovL3d3dy5kaXZlaW50b2phdmFzY3JpcHQuY29tL3Byb2plY3RzL2phdmFzY3JpcHQtc3ByaW50ZiBmb3IKICAgKiBzcGVjaWZpY2F0aW9uIGFuZCB1c2FnZS4KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvdHJlZS9tYXN0ZXIvcGFja2FnZXMvaTE4biNfbgogICAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvdHJlZS9tYXN0ZXIvcGFja2FnZXMvaTE4biNzcHJpbnRmCiAgICovCgoKICBmdW5jdGlvbiBfbihzaW5nbGUsIHBsdXJhbCwgY291bnQpIHsKICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAzID8gX2xlbiAtIDMgOiAwKSwgX2tleSA9IDM7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgYXJnc1tfa2V5IC0gM10gPSBhcmd1bWVudHNbX2tleV07CiAgICB9CgogICAgcmV0dXJuIHdwaTE4bi5zcHJpbnRmLmFwcGx5KHdwaTE4biwgW3dwaTE4bi5fbihzaW5nbGUsIHBsdXJhbCwgY291bnQsIHNsdWcpXS5jb25jYXQoYXJncykpOwogIH0KICAvKioKICAgKiBUcmFuc2xhdGVzIGFuZCByZXRyaWV2ZXMgdGhlIHNpbmd1bGFyIG9yIHBsdXJhbCBmb3JtIGJhc2VkIG9uIHRoZSBzdXBwbGllZCBudW1iZXIsIHdpdGggZ2V0dGV4dCBjb250ZXh0LgogICAqIEZvciBhcmd1bWVudHMgc3ByaW50ZiBpcyB1c2VkLCBzZWUgaHR0cDovL3d3dy5kaXZlaW50b2phdmFzY3JpcHQuY29tL3Byb2plY3RzL2phdmFzY3JpcHQtc3ByaW50ZiBmb3IKICAgKiBzcGVjaWZpY2F0aW9uIGFuZCB1c2FnZS4KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvdHJlZS9tYXN0ZXIvcGFja2FnZXMvaTE4biNfbgogICAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvdHJlZS9tYXN0ZXIvcGFja2FnZXMvaTE4biNzcHJpbnRmCiAgICovCgoKICBmdW5jdGlvbiBfbngoc2luZ2xlLCBwbHVyYWwsIGNvdW50LCBjb250ZXh0KSB7CiAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIgPiA0ID8gX2xlbjIgLSA0IDogMCksIF9rZXkyID0gNDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykgewogICAgICBhcmdzW19rZXkyIC0gNF0gPSBhcmd1bWVudHNbX2tleTJdOwogICAgfQoKICAgIHJldHVybiB3cGkxOG4uc3ByaW50Zi5hcHBseSh3cGkxOG4sIFt3cGkxOG4uX254KHNpbmdsZSwgcGx1cmFsLCBjb3VudCwgY29udGV4dCwgc2x1ZyldLmNvbmNhdChhcmdzKSk7CiAgfQogIC8qKgogICAqIFJldHJpZXZlIHRyYW5zbGF0ZWQgc3RyaW5nIHdpdGggZ2V0dGV4dCBjb250ZXh0LgogICAqIEZvciBhcmd1bWVudHMgc3ByaW50ZiBpcyB1c2VkLCBzZWUgaHR0cDovL3d3dy5kaXZlaW50b2phdmFzY3JpcHQuY29tL3Byb2plY3RzL2phdmFzY3JpcHQtc3ByaW50ZiBmb3IKICAgKiBzcGVjaWZpY2F0aW9uIGFuZCB1c2FnZS4KICAgKgogICAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvdHJlZS9tYXN0ZXIvcGFja2FnZXMvaTE4biNfbgogICAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvdHJlZS9tYXN0ZXIvcGFja2FnZXMvaTE4biNzcHJpbnRmCiAgICovCgoKICBmdW5jdGlvbiBfeChzaW5nbGUsIGNvbnRleHQpIHsKICAgIGZvciAodmFyIF9sZW4zID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMyA+IDIgPyBfbGVuMyAtIDIgOiAwKSwgX2tleTMgPSAyOyBfa2V5MyA8IF9sZW4zOyBfa2V5MysrKSB7CiAgICAgIGFyZ3NbX2tleTMgLSAyXSA9IGFyZ3VtZW50c1tfa2V5M107CiAgICB9CgogICAgcmV0dXJuIHdwaTE4bi5zcHJpbnRmLmFwcGx5KHdwaTE4biwgW3dwaTE4bi5feChzaW5nbGUsIGNvbnRleHQsIHNsdWcpXS5jb25jYXQoYXJncykpOwogIH0KICAvKioKICAgKiBSZXRyaWV2ZSB0aGUgdHJhbnNsYXRpb24gb2YgdGV4dC4KICAgKiBGb3IgYXJndW1lbnRzIHNwcmludGYgaXMgdXNlZCwgc2VlIGh0dHA6Ly93d3cuZGl2ZWludG9qYXZhc2NyaXB0LmNvbS9wcm9qZWN0cy9qYXZhc2NyaXB0LXNwcmludGYgZm9yCiAgICogc3BlY2lmaWNhdGlvbiBhbmQgdXNhZ2UuCiAgICoKICAgKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9Xb3JkUHJlc3MvZ3V0ZW5iZXJnL3RyZWUvbWFzdGVyL3BhY2thZ2VzL2kxOG4jX24KICAgKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9Xb3JkUHJlc3MvZ3V0ZW5iZXJnL3RyZWUvbWFzdGVyL3BhY2thZ2VzL2kxOG4jc3ByaW50ZgogICAqLwoKCiAgZnVuY3Rpb24gX18oc2luZ2xlKSB7CiAgICBmb3IgKHZhciBfbGVuNCA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjQgPiAxID8gX2xlbjQgLSAxIDogMCksIF9rZXk0ID0gMTsgX2tleTQgPCBfbGVuNDsgX2tleTQrKykgewogICAgICBhcmdzW19rZXk0IC0gMV0gPSBhcmd1bWVudHNbX2tleTRdOwogICAgfQoKICAgIHJldHVybiB3cGkxOG4uc3ByaW50Zi5hcHBseSh3cGkxOG4sIFt3cGkxOG4uX18oc2luZ2xlLCBzbHVnKV0uY29uY2F0KGFyZ3MpKTsKICB9CiAgLyoqCiAgICogVGhpcyBmdW5jdGlvbiBhbGxvd3MgeW91IHRvIGludGVycG9sYXRlIHJlYWN0IGNvbXBvbmVudHMgdG8geW91ciB0cmFuc2xhdGlvbnMuCiAgICogWW91IGhhdmUgdG8gcGFzcyBhbiBhbHJlYWR5IHRyYW5zbGF0ZWQgc3RyaW5nIGFzIGFyZ3VtZW50ISBGb3IgdGhpcyB5b3UgY2FuIHVzZSB0aGUgb3RoZXIKICAgKiBpMThuIGZ1bmN0aW9ucyBsaWtlIF9uKCkgb3IgX18oKS4KICAgKgogICAqIEEgdHJhbnNsYXRpb24gY2FuIGxvb2sgbGlrZSB0aGlzOiAiSGVsbG8ge3thfX1jbGljayBtZXt7L2F9fS4iIGFuZCB5b3UgaGF2ZSB0byBwYXNzCiAgICogYSBjb21wb25lbnQgd2l0aCBrZXkgImEiLgogICAqLwoKCiAgZnVuY3Rpb24gX2kodHJhbnNsYXRpb24sIGNvbXBvbmVudHMpIHsKICAgIHJldHVybiBpbnRlcnBvbGF0ZSh7CiAgICAgIG1peGVkU3RyaW5nOiB0cmFuc2xhdGlvbiwKICAgICAgY29tcG9uZW50czogY29tcG9uZW50cwogICAgfSk7CiAgfQoKICByZXR1cm4gewogICAgX246IF9uLAogICAgX254OiBfbngsCiAgICBfeDogX3gsCiAgICBfXzogX18sCiAgICBfaTogX2kKICB9Owp9CgpleHBvcnQgeyBjcmVhdGVMb2NhbGl6YXRpb25GYWN0b3J5IH07"},{"version":3,"sources":["/Users/nguyenthanhdoan/www/wp/wpplugins/packages/utils/lib/factory/i18n.tsx"],"names":["interpolate","wpi18n","wp","createLocalizationFactory","slug","window","wpi18nLazy","i18n","localeData","setLocaleData","_n","single","plural","count","args","sprintf","_nx","context","_x","__","_i","translation","components","mixedString"],"mappings":";;;;;;AAAA;AAGA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA;;;;;;;AAMA,SAASC,yBAAT,CAAmCC,IAAnC,EAAiD;AAAA,aACtBC,MADsB;AAAA,MACrCC,UADqC,QACrCA,UADqC;;AAE7C,MAAIA,UAAU,IAAIA,UAAU,CAACF,IAAD,CAAxB,IAAkCF,EAAlC,IAAwCA,EAAE,CAACK,IAA/C,EAAqD;AAAA,+CACxBD,UAAU,CAACF,IAAD,CADc;AAAA;;AAAA;AACjD,0DAA2C;AAAA,YAAhCI,UAAgC;AACvCN,QAAAA,EAAE,CAACK,IAAH,CAAQE,aAAR,CAAsBD,UAAtB,EAAkCJ,IAAlC;AACH;AAHgD;AAAA;AAAA;AAAA;AAAA;AAIpD;AAED;;;;;;;;;;AAQA,WAASM,EAAT,CAAYC,MAAZ,EAA4BC,MAA5B,EAA4CC,KAA5C,EAAmF;AAAA,sCAArBC,IAAqB;AAArBA,MAAAA,IAAqB;AAAA;;AAC/E,WAAOb,MAAM,CAACc,OAAP,OAAAd,MAAM,GAASA,MAAM,CAACS,EAAP,CAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCT,IAAjC,CAAT,SAAoDU,IAApD,EAAb;AACH;AAED;;;;;;;;;;AAQA,WAASE,GAAT,CAAaL,MAAb,EAA6BC,MAA7B,EAA6CC,KAA7C,EAA4DI,OAA5D,EAAqG;AAAA,uCAArBH,IAAqB;AAArBA,MAAAA,IAAqB;AAAA;;AACjG,WAAOb,MAAM,CAACc,OAAP,OAAAd,MAAM,GAASA,MAAM,CAACe,GAAP,CAAWL,MAAX,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCI,OAAlC,EAA2Cb,IAA3C,CAAT,SAA8DU,IAA9D,EAAb;AACH;AAED;;;;;;;;;;AAQA,WAASI,EAAT,CAAYP,MAAZ,EAA4BM,OAA5B,EAAqE;AAAA,uCAArBH,IAAqB;AAArBA,MAAAA,IAAqB;AAAA;;AACjE,WAAOb,MAAM,CAACc,OAAP,OAAAd,MAAM,GAASA,MAAM,CAACiB,EAAP,CAAUP,MAAV,EAAkBM,OAAlB,EAA2Bb,IAA3B,CAAT,SAA8CU,IAA9C,EAAb;AACH;AAED;;;;;;;;;;AAQA,WAASK,EAAT,CAAYR,MAAZ,EAAoD;AAAA,uCAArBG,IAAqB;AAArBA,MAAAA,IAAqB;AAAA;;AAChD,WAAOb,MAAM,CAACc,OAAP,OAAAd,MAAM,GAASA,MAAM,CAACkB,EAAP,CAAUR,MAAV,EAAkBP,IAAlB,CAAT,SAAqCU,IAArC,EAAb;AACH;AAED;;;;;;;;;;AAQA,WAASM,EAAT,CAAYC,WAAZ,EAAiCC,UAAjC,EAA4F;AACxF,WAAOtB,WAAW,CAAC;AACfuB,MAAAA,WAAW,EAAEF,WADE;AAEfC,MAAAA,UAAU,EAAVA;AAFe,KAAD,CAAlB;AAIH;;AAED,SAAO;AAAEZ,IAAAA,EAAE,EAAFA,EAAF;AAAMM,IAAAA,GAAG,EAAHA,GAAN;AAAWE,IAAAA,EAAE,EAAFA,EAAX;AAAeC,IAAAA,EAAE,EAAFA,EAAf;AAAmBC,IAAAA,EAAE,EAAFA;AAAnB,GAAP;AACH;;AAED,SAASjB,yBAAT","sourcesContent":["// @see https://github.com/Automattic/wp-calypso/blob/master/packages/i18n-calypso/src/index.js\n\nimport { ReactNode, ReactElement } from \"react\";\nimport interpolate from \"interpolate-components\";\nimport * as wpi18n from \"@wordpress/i18n\";\nimport wp from \"wp\";\n\n/**\n * Create multiple functions for a specific plugin so they can be localized.\n *\n * @param slug The slug which you have registered your i18n assets\n * @returns\n */\nfunction createLocalizationFactory(slug: string) {\n    const { wpi18nLazy } = window as any;\n    if (wpi18nLazy && wpi18nLazy[slug] && wp && wp.i18n) {\n        for (const localeData of wpi18nLazy[slug]) {\n            wp.i18n.setLocaleData(localeData, slug);\n        }\n    }\n\n    /**\n     * Translates and retrieves the singular or plural form based on the supplied number.\n     * For arguments sprintf is used, see http://www.diveintojavascript.com/projects/javascript-sprintf for\n     * specification and usage.\n     *\n     * @see https://github.com/WordPress/gutenberg/tree/master/packages/i18n#_n\n     * @see https://github.com/WordPress/gutenberg/tree/master/packages/i18n#sprintf\n     */\n    function _n(single: string, plural: string, count: number, ...args: any[]): string {\n        return wpi18n.sprintf(wpi18n._n(single, plural, count, slug), ...args) as string;\n    }\n\n    /**\n     * Translates and retrieves the singular or plural form based on the supplied number, with gettext context.\n     * For arguments sprintf is used, see http://www.diveintojavascript.com/projects/javascript-sprintf for\n     * specification and usage.\n     *\n     * @see https://github.com/WordPress/gutenberg/tree/master/packages/i18n#_n\n     * @see https://github.com/WordPress/gutenberg/tree/master/packages/i18n#sprintf\n     */\n    function _nx(single: string, plural: string, count: number, context: string, ...args: any[]): string {\n        return wpi18n.sprintf(wpi18n._nx(single, plural, count, context, slug), ...args) as string;\n    }\n\n    /**\n     * Retrieve translated string with gettext context.\n     * For arguments sprintf is used, see http://www.diveintojavascript.com/projects/javascript-sprintf for\n     * specification and usage.\n     *\n     * @see https://github.com/WordPress/gutenberg/tree/master/packages/i18n#_n\n     * @see https://github.com/WordPress/gutenberg/tree/master/packages/i18n#sprintf\n     */\n    function _x(single: string, context: string, ...args: any[]): string {\n        return wpi18n.sprintf(wpi18n._x(single, context, slug), ...args) as string;\n    }\n\n    /**\n     * Retrieve the translation of text.\n     * For arguments sprintf is used, see http://www.diveintojavascript.com/projects/javascript-sprintf for\n     * specification and usage.\n     *\n     * @see https://github.com/WordPress/gutenberg/tree/master/packages/i18n#_n\n     * @see https://github.com/WordPress/gutenberg/tree/master/packages/i18n#sprintf\n     */\n    function __(single: string, ...args: any[]): string {\n        return wpi18n.sprintf(wpi18n.__(single, slug), ...args) as string;\n    }\n\n    /**\n     * This function allows you to interpolate react components to your translations.\n     * You have to pass an already translated string as argument! For this you can use the other\n     * i18n functions like _n() or __().\n     *\n     * A translation can look like this: \"Hello {{a}}click me{{/a}}.\" and you have to pass\n     * a component with key \"a\".\n     */\n    function _i(translation: string, components?: { [placeholder: string]: ReactElement }): any {\n        return interpolate({\n            mixedString: translation,\n            components\n        }) as ReactNode;\n    }\n\n    return { _n, _nx, _x, __, _i };\n}\n\nexport { createLocalizationFactory };\n"]}]}